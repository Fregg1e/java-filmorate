CREATE TABLE IF NOT EXISTS USERS 
(
	USER_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	EMAIL VARCHAR(50) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	USER_NAME VARCHAR(50),
	BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FRIENDS 
(
	USER_ID BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
	FRIEND_ID BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
	STATUS BOOLEAN NOT NULL,
	CONSTRAINT FRIENDS_PK
		PRIMARY KEY (USER_ID, FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS GENRES
(
	GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	GENRE_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA
(
	MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	MPA_NAME VARCHAR(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS 
(
	FILM_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FILM_NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200),
	RELEASE_DATE DATE,
	DURATION INTEGER,
	MPA_ID INTEGER REFERENCES MPA (MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES 
(
	FILM_ID BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
	GENRE_ID INTEGER REFERENCES GENRES (GENRE_ID),
	CONSTRAINT FILMS_GENRES_PK
		PRIMARY KEY (FILM_ID, GENRE_ID)
);

CREATE TABLE IF NOT EXISTS LIKES 
(
	FILM_ID BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
	USER_ID BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
	CONSTRAINT LIKES_PK
		PRIMARY KEY (FILM_ID, USER_ID)
);

