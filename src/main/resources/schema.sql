CREATE TABLE IF NOT EXISTS USERS 
(
	USER_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	EMAIL CHARACTER VARYING(50) NOT NULL,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	USER_NAME CHARACTER VARYING(50),
	BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FRIENDS 
(
	USER_ID BIGINT,
	FRIEND_ID BIGINT,
	STATUS BOOLEAN NOT NULL,
	CONSTRAINT FRIENDS_PK
		PRIMARY KEY (USER_ID, FRIEND_ID),
	CONSTRAINT FRIENDS_USERS_USER_ID_FK
		FOREIGN KEY (USER_ID) REFERENCES USERS,
	CONSTRAINT FRIENDS_USERS_FRIEND_ID_FK
		FOREIGN KEY (FRIEND_ID) REFERENCES USERS
);

CREATE TABLE IF NOT EXISTS GENRES
(
	GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	GENRE_NAME CHARACTER VARYING(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA
(
	MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	MPA_NAME CHARACTER VARYING(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS 
(
	FILM_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FILM_NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200),
	RELEASE_DATE DATE,
	DURATION INTEGER,
	MPA_ID INTEGER,
	CONSTRAINT FILMS_MPA_MPA_ID_FK
		FOREIGN KEY (MPA_ID) REFERENCES MPA
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES 
(
	FILM_ID BIGINT,
	GENRE_ID INTEGER,
	CONSTRAINT FILMS_GENRES_PK
		PRIMARY KEY (FILM_ID, GENRE_ID),
	CONSTRAINT FILMS_GENRES_FILMS_FILM_ID_FK
		FOREIGN KEY (FILM_ID) REFERENCES FILMS,
	CONSTRAINT FILMS_GENRES_GENRES_GENRE_ID_FK
		FOREIGN KEY (GENRE_ID) REFERENCES GENRES
);

